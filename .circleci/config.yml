version: 2.1
jobs:
  terraform:
    docker:
      - image: patrickcpierson/terraform-aws:latest
    steps:
      - checkout
      - run:
          name: terraform-init
          command: cd infrastructure; OBJECT_KEY=$CIRCLE_BRANCH ./util/terraform/terraform_init.sh
      - run:
          name: terraform-plan
          command: cd infrastructure; terraform plan
  terraform-staging-deploy:
    docker:
      - image: patrickcpierson/terraform-aws:latest
    steps:
      - checkout
      - run:
          name: terraform-init
          command: cd infrastructure; OBJECT_KEY=$CIRCLE_BRANCH ./util/terraform/terraform_init.sh
      - run:
          name: terraform-apply
          command: cd infrastructure; terraform apply -auto-approve
  terraform-prod-deploy:
    docker:
      - image: patrickcpierson/terraform-aws:latest
    steps:
      - checkout
      - run:
          name: terraform-init
          command: cd infrastructure; OBJECT_KEY=$CIRCLE_BRANCH ./util/terraform/terraform_init.sh
      - run:
          name: terraform-apply
          command: cd infrastructure; terraform apply -auto-approve
  terraform-dev-deploy:
    docker:
      - image: patrickcpierson/terraform-aws:latest
    steps:
      - checkout
      - run:
          name: terraform-init
          command: cd infrastructure; OBJECT_KEY=$CIRCLE_BRANCH ./util/terraform/terraform_init.sh
      - run:
          name: terraform-apply
          command: cd infrastructure; terraform apply -auto-approve
  build:
    docker:
      - image: node:12-alpine
    steps:
      - checkout
      - run:
          name: yarn-install
          command: yarn install --production
      - run:
          name: npm-build
          command: CI=false npm run build
#       - run:
#           name: npm-test
#           command: npm run test
# TODO: setup caching
workflows:
  version: 2
  terraform_and_build:
    jobs:
      - build
      - terraform:
          filters:
            branches:
              only: 
                - staging
                - master
                - /infra-.*/  
      - terraform-staging-deploy:
          requires:
            - terraform
            - build
          filters:
            branches:
              only: staging
          # context: staging
      - terraform-prod-deploy:
          requires:
            - terraform
            - build
          filters:
            branches:
              only: master
          # context: prodution
      - terraform-dev-deploy:
          requires:
            - terraform
            - build
          filters:
            branches:
              only: /infra-.*/
          # context: dev
